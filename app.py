import pandas as pd
from dash import Dash, dcc, html, callback, Input, Output
import dash_bootstrap_components as dbc
import plotly.graph_objects as go
import numpy as np

app = Dash(external_stylesheets=[dbc.themes.LUMEN])

# z_data = pd.read_csv("assets/HuBMAP_pancreas_graph_data.csv", index_col=False)

X = [246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646,246,296,346,396,446,496,546,596,646]
Y = [274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,274.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,327.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,380.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,433.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5,486.5]
Z = [17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,17.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,52.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,87.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5,122.5]
values = [0.899453,0.814864,-0.0758165,-1.02375,-1.77051,-1.41865,0.27477,0.908437,0.785047,0.757043,-0.27024,0.328565,-1.84048,-2.51951,-1.72992,-1.68598,-1.09792,0.730107,0.80502,0.785047,-0.0278097,-1.84738,-1.95179,-1.66058,-1.99145,-1.92024,0.61152,-0.0237165,0.80502,0.36353,-1.44261,-2.0438,-1.74213,-2.01105,-1.31894,0.00268442,0.649476,0,0.206322,0.80502,-0.894192,-1.39128,-1.23814,0.0248316,-0.112059,0.785047,-0.0948196,0.795082,-0.49552,-0.276438,0.368624,0.5267,0.872023,-0.21079,0.159095,0.627069,0.419596,-1.74602,-1.79439,-1.69349,-0.98322,0.351535,0.716563,0.654695,0.7557,-0.458674,-1.74591,-1.8204,-1.76278,-1.92799,-1.0406,0.503389,0.021493,-0.0377519,0.00996526,-1.46493,-1.92636,-1.86069,-1.90584,-0.815506,0.591197,-0.106935,-0.116027,0.659182,0.238391,-0.444433,-0.805421,0.1683,0.279135,-0.454056,-0.0344609,0,0.724156,-0.108482,0.163203,0.426809,0.473848,0.291299,0.699033,0.622496,0.641162,-0.132618,-0.50364,-1.93907,-1.88085,-1.00712,0.0626868,0.484138,0.881249,0.609037,0.481314,-1.6977,-1.71464,-1.89354,-1.82741,-1.62204,0.0115713,0.890391,0.0857519,-0.16566,-0.218523,-1.73204,-1.89692,-1.67505,-0.537866,-0.060122,-0.120018,0.487982,0.0921991,0.969217,0.525842,0.386316,0.609939,0.629404,-0.0372392,0.985942,0.368367,0.683812,0.079185,0.518972,-0.310714,0.056978,0.541086,0,0.843841,-0.0588655,0.182417,0.706591,-0.504244,-1.86077,-0.753604,0.187958,0.497707,0.159911,0.71531,0.432616,0.547747,-0.312222,-1.8819,-1.97194,-0.522975,-0.358227,0.843841,0.649161,0.709856,0.566535,-0.54793,-0.240245,-0.479566,0.35658,-0.212881,0.872023,0.204492,0.481485,0.628838,0.403204,0,0.685336,-0.0903143,-0.150144]


fig1= go.Figure(data=go.Volume(
    x=X,
    y=Y,
    z=Z,
    value=values,
    isomin=-3,
    isomax=1,
))


app.layout = html.Div(
  children=[
    html.Header(children=[
      html.H1("Spatial Proteome Map of a Single Human Islet Microenvironment")
    ]),
    html.Main(
      id="main-content",
        children=[
        html.Div(
          id="navbar",
          children=[
            dbc.Nav(
              [
                dbc.NavLink("Proteome Cross-Section View", href="#cross-section", external_link=True),
                dbc.NavLink("Proteomics Scatter Plot", href="#scatter-plot", external_link=True),
                dbc.NavLink("Download Data", href="#download-dataset", external_link=True),
              ],
              vertical=True,
            )
          ]
        ),
        html.Div(
          id="content-div",
          children=[
            html.Section(
              id="cross-section",
              children=[
                html.Header(html.H2("Proteome Cross-Section View")),
                html.P("Here is a 3D cross-section of the tissue"),
                dcc.Graph(figure=fig1)
              ]
            ),
            html.Section(
              id="scatter-plot",
              children=[
                html.Header(html.H2("Proteomics Scatter Plot")),
                html.P("Explanation text"),
                html.Div("Visualization placeholder", className="viz-placeholder")
              ]
            ),
            html.Section(
              id="download-dataset",
              children=[
                html.Header(html.H2("Download Data Here")),
                html.Div(
                  children=[
                    html.P("Here is the data collected in this study, available as an Excel file or a VTK file."),
                    dbc.Button("Download Excel Spreadsheet", id="btn-download-xlsx", className="download-button"),
                    dcc.Download(id="download-xlsx"),
                    dbc.Button("Download VTK File", id="btn-download-vtk", className="download-button"),
                    dcc.Download(id="download-vtk")
                  ]
                ),
                html.Hr(),
                html.Div(
                  children=[
                    html.P(
                      children=[
                        "If you would like to visualize this data using the `ili spatial data mapping tool, open the ", 
                        html.A("`ili website", href="http://ili.embl.de/"),
                        ", select 'Volume', and drag and drop the following two files into the viewer:"
                      ] 
                    ),
                  ]
                )
              ]
            ),
          ]
        )
      ]),
    html.Footer("This site made possible by the Texas Advanced Computing Center.")
  ]
)

@callback(
    Output("download-xlsx", "data"),
    Input("btn-download-xlsx", "n_clicks"),
    prevent_initial_call=True,
)

def download_xlsx(n_clicks):
    return dcc.send_file(
        "assets/HubMAP_TMC_p1_20C_3D_protINT_May8_sorted.xlsx"
)

@callback(
    Output("download-vtk", "data"),
    Input("btn-download-vtk", "n_clicks"),
    prevent_initial_call=True,
)

def download_vtk(n_clicks):
    return dcc.send_file(
        "assets/HubMAP_TMC_p1_20C_3D_protINT_May8_sorted.vti"
)

if __name__ == "__main__":
  app.run_server(debug=True)